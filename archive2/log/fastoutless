=== Performing test "less" ===
Template circuit.problog
Running n=1
stdout: b'less_than(a,b,t):\t0.25      \n' ;;; stderr: b'0.16\n'
stdout: b'less_than(a,b,t):\t0.25      \n' ;;; stderr: b'0.10\n'
stdout: b'less_than(a,b,t):\t0.25      \n' ;;; stderr: b'0.11\n'
stdout: b'less_than(a,b,t):\t0.25      \n' ;;; stderr: b'0.11\n'
stdout: b'less_than(a,b,t):\t0.25      \n' ;;; stderr: b'0.09\n'
Running n=2
stdout: b'less_than(a,b,t):\t0.375     \n' ;;; stderr: b'0.13\n'
stdout: b'less_than(a,b,t):\t0.375     \n' ;;; stderr: b'0.12\n'
stdout: b'less_than(a,b,t):\t0.375     \n' ;;; stderr: b'0.11\n'
stdout: b'less_than(a,b,t):\t0.375     \n' ;;; stderr: b'0.11\n'
stdout: b'less_than(a,b,t):\t0.375     \n' ;;; stderr: b'0.11\n'
Running n=3
stdout: b'less_than(a,b,t):\t0.4375    \n' ;;; stderr: b'0.12\n'
stdout: b'less_than(a,b,t):\t0.4375    \n' ;;; stderr: b'0.13\n'
stdout: b'less_than(a,b,t):\t0.4375    \n' ;;; stderr: b'0.12\n'
stdout: b'less_than(a,b,t):\t0.4375    \n' ;;; stderr: b'0.12\n'
stdout: b'less_than(a,b,t):\t0.4375    \n' ;;; stderr: b'0.12\n'
Running n=4
stdout: b'less_than(a,b,t):\t0.46875   \n' ;;; stderr: b'0.15\n'
stdout: b'less_than(a,b,t):\t0.46875   \n' ;;; stderr: b'0.16\n'
stdout: b'less_than(a,b,t):\t0.46875   \n' ;;; stderr: b'0.14\n'
stdout: b'less_than(a,b,t):\t0.46875   \n' ;;; stderr: b'0.15\n'
stdout: b'less_than(a,b,t):\t0.46875   \n' ;;; stderr: b'0.14\n'
Running n=5
stdout: b'less_than(a,b,t):\t0.484375  \n' ;;; stderr: b'0.16\n'
stdout: b'less_than(a,b,t):\t0.484375  \n' ;;; stderr: b'0.18\n'
stdout: b'less_than(a,b,t):\t0.484375  \n' ;;; stderr: b'0.16\n'
stdout: b'less_than(a,b,t):\t0.484375  \n' ;;; stderr: b'0.15\n'
stdout: b'less_than(a,b,t):\t0.484375  \n' ;;; stderr: b'0.15\n'
Running n=6
stdout: b'less_than(a,b,t):\t0.4921875 \n' ;;; stderr: b'0.20\n'
stdout: b'less_than(a,b,t):\t0.4921875 \n' ;;; stderr: b'0.17\n'
stdout: b'less_than(a,b,t):\t0.4921875 \n' ;;; stderr: b'0.17\n'
stdout: b'less_than(a,b,t):\t0.4921875 \n' ;;; stderr: b'0.19\n'
stdout: b'less_than(a,b,t):\t0.4921875 \n' ;;; stderr: b'0.19\n'
Running n=7
stdout: b'less_than(a,b,t):\t0.49609375\n' ;;; stderr: b'0.20\n'
stdout: b'less_than(a,b,t):\t0.49609375\n' ;;; stderr: b'0.19\n'
stdout: b'less_than(a,b,t):\t0.49609375\n' ;;; stderr: b'0.19\n'
stdout: b'less_than(a,b,t):\t0.49609375\n' ;;; stderr: b'0.19\n'
stdout: b'less_than(a,b,t):\t0.49609375\n' ;;; stderr: b'0.19\n'
Running n=8
stdout: b'less_than(a,b,t):\t0.49804688\n' ;;; stderr: b'0.21\n'
stdout: b'less_than(a,b,t):\t0.49804688\n' ;;; stderr: b'0.21\n'
stdout: b'less_than(a,b,t):\t0.49804688\n' ;;; stderr: b'0.21\n'
stdout: b'less_than(a,b,t):\t0.49804688\n' ;;; stderr: b'0.21\n'
stdout: b'less_than(a,b,t):\t0.49804688\n' ;;; stderr: b'0.21\n'
Running n=9
stdout: b'less_than(a,b,t):\t0.49902344\n' ;;; stderr: b'0.22\n'
stdout: b'less_than(a,b,t):\t0.49902344\n' ;;; stderr: b'0.22\n'
stdout: b'less_than(a,b,t):\t0.49902344\n' ;;; stderr: b'0.25\n'
stdout: b'less_than(a,b,t):\t0.49902344\n' ;;; stderr: b'0.25\n'
stdout: b'less_than(a,b,t):\t0.49902344\n' ;;; stderr: b'0.22\n'
Running n=10
stdout: b'less_than(a,b,t):\t0.49951172\n' ;;; stderr: b'0.25\n'
stdout: b'less_than(a,b,t):\t0.49951172\n' ;;; stderr: b'0.26\n'
stdout: b'less_than(a,b,t):\t0.49951172\n' ;;; stderr: b'0.27\n'
stdout: b'less_than(a,b,t):\t0.49951172\n' ;;; stderr: b'0.27\n'
stdout: b'less_than(a,b,t):\t0.49951172\n' ;;; stderr: b'0.27\n'
Running n=11
stdout: b'less_than(a,b,t):\t0.49975586\n' ;;; stderr: b'0.28\n'
stdout: b'less_than(a,b,t):\t0.49975586\n' ;;; stderr: b'0.27\n'
stdout: b'less_than(a,b,t):\t0.49975586\n' ;;; stderr: b'0.28\n'
stdout: b'less_than(a,b,t):\t0.49975586\n' ;;; stderr: b'0.28\n'
stdout: b'less_than(a,b,t):\t0.49975586\n' ;;; stderr: b'0.27\n'
Running n=12
stdout: b'less_than(a,b,t):\t0.49987793\n' ;;; stderr: b'0.30\n'
stdout: b'less_than(a,b,t):\t0.49987793\n' ;;; stderr: b'0.30\n'
stdout: b'less_than(a,b,t):\t0.49987793\n' ;;; stderr: b'0.28\n'
stdout: b'less_than(a,b,t):\t0.49987793\n' ;;; stderr: b'0.28\n'
stdout: b'less_than(a,b,t):\t0.49987793\n' ;;; stderr: b'0.28\n'
Running n=13
stdout: b'less_than(a,b,t):\t0.49993896\n' ;;; stderr: b'0.31\n'
stdout: b'less_than(a,b,t):\t0.49993896\n' ;;; stderr: b'0.31\n'
stdout: b'less_than(a,b,t):\t0.49993896\n' ;;; stderr: b'0.31\n'
stdout: b'less_than(a,b,t):\t0.49993896\n' ;;; stderr: b'0.32\n'
stdout: b'less_than(a,b,t):\t0.49993896\n' ;;; stderr: b'0.32\n'
Running n=14
stdout: b'less_than(a,b,t):\t0.49996948\n' ;;; stderr: b'0.35\n'
stdout: b'less_than(a,b,t):\t0.49996948\n' ;;; stderr: b'0.34\n'
stdout: b'less_than(a,b,t):\t0.49996948\n' ;;; stderr: b'0.33\n'
stdout: b'less_than(a,b,t):\t0.49996948\n' ;;; stderr: b'0.33\n'
stdout: b'less_than(a,b,t):\t0.49996948\n' ;;; stderr: b'0.32\n'
Running n=15
stdout: b'less_than(a,b,t):\t0.49998474\n' ;;; stderr: b'0.35\n'
stdout: b'less_than(a,b,t):\t0.49998474\n' ;;; stderr: b'0.37\n'
stdout: b'less_than(a,b,t):\t0.49998474\n' ;;; stderr: b'0.37\n'
stdout: b'less_than(a,b,t):\t0.49998474\n' ;;; stderr: b'0.36\n'
stdout: b'less_than(a,b,t):\t0.49998474\n' ;;; stderr: b'0.36\n'
Running n=16
stdout: b'less_than(a,b,t):\t0.49999237\n' ;;; stderr: b'0.37\n'
stdout: b'less_than(a,b,t):\t0.49999237\n' ;;; stderr: b'0.39\n'
stdout: b'less_than(a,b,t):\t0.49999237\n' ;;; stderr: b'0.39\n'
stdout: b'less_than(a,b,t):\t0.49999237\n' ;;; stderr: b'0.37\n'
stdout: b'less_than(a,b,t):\t0.49999237\n' ;;; stderr: b'0.38\n'
Running n=17
stdout: b'less_than(a,b,t):\t0.49999619\n' ;;; stderr: b'0.39\n'
stdout: b'less_than(a,b,t):\t0.49999619\n' ;;; stderr: b'0.42\n'
stdout: b'less_than(a,b,t):\t0.49999619\n' ;;; stderr: b'0.41\n'
stdout: b'less_than(a,b,t):\t0.49999619\n' ;;; stderr: b'0.39\n'
stdout: b'less_than(a,b,t):\t0.49999619\n' ;;; stderr: b'0.39\n'
Running n=18
stdout: b'less_than(a,b,t):\t0.49999809\n' ;;; stderr: b'0.44\n'
stdout: b'less_than(a,b,t):\t0.49999809\n' ;;; stderr: b'0.43\n'
stdout: b'less_than(a,b,t):\t0.49999809\n' ;;; stderr: b'0.43\n'
stdout: b'less_than(a,b,t):\t0.49999809\n' ;;; stderr: b'0.44\n'
stdout: b'less_than(a,b,t):\t0.49999809\n' ;;; stderr: b'0.42\n'
Running n=19
stdout: b'less_than(a,b,t):\t0.49999905\n' ;;; stderr: b'0.44\n'
stdout: b'less_than(a,b,t):\t0.49999905\n' ;;; stderr: b'0.45\n'
stdout: b'less_than(a,b,t):\t0.49999905\n' ;;; stderr: b'0.44\n'
stdout: b'less_than(a,b,t):\t0.49999905\n' ;;; stderr: b'0.44\n'
stdout: b'less_than(a,b,t):\t0.49999905\n' ;;; stderr: b'0.44\n'
Running n=20
stdout: b'less_than(a,b,t):\t0.49999952\n' ;;; stderr: b'0.46\n'
stdout: b'less_than(a,b,t):\t0.49999952\n' ;;; stderr: b'0.47\n'
stdout: b'less_than(a,b,t):\t0.49999952\n' ;;; stderr: b'0.49\n'
stdout: b'less_than(a,b,t):\t0.49999952\n' ;;; stderr: b'0.49\n'
stdout: b'less_than(a,b,t):\t0.49999952\n' ;;; stderr: b'0.46\n'
Running n=21
stdout: b'less_than(a,b,t):\t0.49999976\n' ;;; stderr: b'0.49\n'
stdout: b'less_than(a,b,t):\t0.49999976\n' ;;; stderr: b'0.50\n'
stdout: b'less_than(a,b,t):\t0.49999976\n' ;;; stderr: b'0.50\n'
stdout: b'less_than(a,b,t):\t0.49999976\n' ;;; stderr: b'0.50\n'
stdout: b'less_than(a,b,t):\t0.49999976\n' ;;; stderr: b'0.50\n'
Running n=22
stdout: b'less_than(a,b,t):\t0.49999988\n' ;;; stderr: b'0.53\n'
stdout: b'less_than(a,b,t):\t0.49999988\n' ;;; stderr: b'0.52\n'
stdout: b'less_than(a,b,t):\t0.49999988\n' ;;; stderr: b'0.52\n'
stdout: b'less_than(a,b,t):\t0.49999988\n' ;;; stderr: b'0.52\n'
stdout: b'less_than(a,b,t):\t0.49999988\n' ;;; stderr: b'0.54\n'
Running n=23
stdout: b'less_than(a,b,t):\t0.49999994\n' ;;; stderr: b'0.56\n'
stdout: b'less_than(a,b,t):\t0.49999994\n' ;;; stderr: b'0.57\n'
stdout: b'less_than(a,b,t):\t0.49999994\n' ;;; stderr: b'0.55\n'
stdout: b'less_than(a,b,t):\t0.49999994\n' ;;; stderr: b'0.54\n'
stdout: b'less_than(a,b,t):\t0.49999994\n' ;;; stderr: b'0.57\n'
Running n=24
stdout: b'less_than(a,b,t):\t0.49999997\n' ;;; stderr: b'0.69\n'
stdout: b'less_than(a,b,t):\t0.49999997\n' ;;; stderr: b'0.67\n'
stdout: b'less_than(a,b,t):\t0.49999997\n' ;;; stderr: b'0.68\n'
stdout: b'less_than(a,b,t):\t0.49999997\n' ;;; stderr: b'0.73\n'
stdout: b'less_than(a,b,t):\t0.49999997\n' ;;; stderr: b'0.73\n'
Running n=25
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.71\n'
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.80\n'
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.78\n'
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.74\n'
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.81\n'
Running n=26
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.77\n'
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.74\n'
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.72\n'
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.73\n'
stdout: b'less_than(a,b,t):\t0.49999999\n' ;;; stderr: b'0.71\n'
Running n=27
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.77\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.85\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.84\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.88\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.96\n'
Running n=28
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.92\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.72\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.71\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.72\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.70\n'
Running n=29
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.74\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.73\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.74\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.74\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.74\n'
Running n=30
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.78\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.78\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.78\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.80\n'
stdout: b'less_than(a,b,t):\t0.5       \n' ;;; stderr: b'0.80\n'
Template interleaved.jl
Running n=1
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'6.08\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.89\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.86\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.84\n'
Running n=2
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'6.72\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'6.70\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'6.70\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'8.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'8.09\n'
Running n=3
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'7.60\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'7.39\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'6.57\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'6.63\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'6.82\n'
Running n=4
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'6.74\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'6.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'6.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'6.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'6.80\n'
Running n=5
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'6.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'6.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'6.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'6.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'6.88\n'
Running n=6
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'6.76\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'6.76\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'6.74\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'6.78\n'
Running n=7
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'6.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'6.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'6.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'6.77\n'
Running n=8
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'6.71\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'8.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'8.42\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'8.58\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'8.84\n'
Running n=9
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'8.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'8.13\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'6.73\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'6.77\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'6.78\n'
Running n=10
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'6.76\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'6.94\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'6.74\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'6.77\n'
Running n=11
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'6.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'6.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'6.98\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'6.75\n'
Running n=12
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'6.79\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'6.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'6.79\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'6.65\n'
Running n=13
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'6.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'6.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'6.59\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'6.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'6.75\n'
Running n=14
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'6.79\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'6.78\n'
Running n=15
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'6.84\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'6.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'6.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'6.90\n'
Running n=16
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'6.90\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'6.90\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'6.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'6.87\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'6.88\n'
Running n=17
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'6.90\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'6.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'8.71\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'9.19\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'8.88\n'
Running n=18
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'8.71\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'8.57\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'8.89\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'8.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'8.83\n'
Running n=19
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'8.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'8.92\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'8.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'7.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'8.03\n'
Running n=20
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'269.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'7.45\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'7.36\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'7.66\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'8.13\n'
Running n=21
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'7.30\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'7.17\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'7.16\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'7.45\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'7.05\n'
Running n=22
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'7.08\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'7.12\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'7.17\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'7.22\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'7.07\n'
Running n=23
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'8.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'7.30\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'7.55\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'7.44\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'8.61\n'
Running n=24
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'7.54\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'7.12\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'7.46\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'7.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'7.73\n'
Running n=25
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'8.33\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'8.51\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'8.94\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'7.14\n'
Running n=26
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'7.30\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'7.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'7.51\n'
Running n=27
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'6.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'6.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'6.80\n'
Running n=28
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'6.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'7.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'6.97\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'6.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'8.11\n'
Running n=29
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'8.40\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'8.57\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'8.44\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'9.31\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'8.96\n'
Running n=30
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656614, true => 0.49999999953433877)\n' ;;; stderr: b'8.74\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656614, true => 0.49999999953433877)\n' ;;; stderr: b'8.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656614, true => 0.49999999953433877)\n' ;;; stderr: b'8.16\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656614, true => 0.49999999953433877)\n' ;;; stderr: b'6.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656614, true => 0.49999999953433877)\n' ;;; stderr: b'6.75\n'
Template interleaved_lsb_first.jl
Running n=1
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.84\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.87\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.84\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.85\n'
Running n=2
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'6.71\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'6.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'6.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'6.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'6.71\n'
Running n=3
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'6.76\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'6.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'6.84\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'6.84\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'6.82\n'
Running n=4
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'6.89\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'6.79\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'6.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'6.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'6.86\n'
Running n=5
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'6.86\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'6.76\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'6.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'7.37\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'6.83\n'
Running n=6
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'6.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'6.77\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'6.77\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'6.87\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'7.15\n'
Running n=7
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'6.86\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'6.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'7.70\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'8.89\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'9.26\n'
Running n=8
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'9.16\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'9.31\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'9.04\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'8.73\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'8.56\n'
Running n=9
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'8.49\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'8.91\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'8.63\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'8.59\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'8.53\n'
Running n=10
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'8.30\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'7.62\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'7.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'8.62\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'8.93\n'
Running n=11
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'8.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'8.65\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'8.72\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'8.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'8.08\n'
Running n=12
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'7.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'8.89\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'8.79\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'8.54\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'7.13\n'
Running n=13
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'7.13\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'6.97\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'7.09\n'
Running n=14
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'6.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'7.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'7.14\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'7.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'6.95\n'
Running n=15
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'7.04\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'7.21\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'7.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'7.13\n'
Running n=16
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'7.06\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'6.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'6.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'6.80\n'
Running n=17
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'7.11\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'7.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'7.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'7.08\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'7.08\n'
Running n=18
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.06\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.07\n'
Running n=19
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'7.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'7.06\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'7.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'6.99\n'
Running n=20
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'7.01\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'6.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'7.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'7.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'7.55\n'
Running n=21
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'8.87\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'8.74\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'8.67\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'8.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'8.93\n'
Running n=22
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'9.18\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'8.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'8.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'8.60\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'8.62\n'
Running n=23
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'8.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'8.63\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'8.77\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'8.35\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'8.73\n'
Running n=24
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'8.45\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'8.31\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'7.15\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'6.92\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'6.91\n'
Running n=25
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'6.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'6.97\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'6.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'7.07\n'
Running n=26
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'7.13\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'6.93\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'6.89\n'
Running n=27
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'7.01\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'6.98\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'7.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'7.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'6.92\n'
Running n=28
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'6.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'7.14\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'7.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'7.06\n'
Running n=29
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'7.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'7.06\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'7.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'7.02\n'
Running n=30
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656616, true => 0.49999999953433905)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656616, true => 0.49999999953433905)\n' ;;; stderr: b'7.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656616, true => 0.49999999953433905)\n' ;;; stderr: b'7.08\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656616, true => 0.49999999953433905)\n' ;;; stderr: b'7.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000004656616, true => 0.49999999953433905)\n' ;;; stderr: b'7.07\n'

