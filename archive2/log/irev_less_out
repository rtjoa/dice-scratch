=== Performing test "less" ===
Template interleaved_lsb_first.jl
Running n=1
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'5.91\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'6.92\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'7.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'7.56\n'
Running n=2
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'8.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'9.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'8.66\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'8.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.6250000000000001, true => 0.3750000000000001)\n' ;;; stderr: b'7.67\n'
Running n=3
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'7.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'6.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'7.12\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'6.84\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625000000000001, true => 0.43750000000000017)\n' ;;; stderr: b'6.98\n'
Running n=4
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'6.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'7.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'6.94\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'6.97\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5312500000000001, true => 0.46875000000000017)\n' ;;; stderr: b'6.83\n'
Running n=5
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'6.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'6.91\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'6.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'7.04\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.4843750000000001)\n' ;;; stderr: b'7.44\n'
Running n=6
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'7.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'7.03\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'8.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'8.66\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.4921875000000001)\n' ;;; stderr: b'8.79\n'
Running n=7
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'8.17\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'7.92\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'7.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'7.24\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.4960937500000001)\n' ;;; stderr: b'6.83\n'
Running n=8
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'6.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'7.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'8.91\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'7.67\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000017)\n' ;;; stderr: b'7.45\n'
Running n=9
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'7.65\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'7.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'7.59\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'7.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625000001, true => 0.49902343750000017)\n' ;;; stderr: b'7.66\n'
Running n=10
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'7.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'7.89\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'7.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'7.40\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5004882812500001, true => 0.4995117187500001)\n' ;;; stderr: b'7.76\n'
Running n=11
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'8.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'7.98\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'9.49\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'9.94\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5002441406250001, true => 0.49975585937500017)\n' ;;; stderr: b'9.59\n'
Running n=12
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'9.49\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'9.63\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'9.60\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'9.57\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125001, true => 0.49987792968750017)\n' ;;; stderr: b'10.38\n'
Running n=13
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'10.24\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'9.54\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'9.58\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'7.93\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000610351562501, true => 0.49993896484375017)\n' ;;; stderr: b'7.23\n'
Running n=14
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'6.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'6.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'7.03\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'7.13\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000305175781251, true => 0.4999694824218752)\n' ;;; stderr: b'6.97\n'
Running n=15
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'7.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'7.06\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'6.87\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890627, true => 0.4999847412109378)\n' ;;; stderr: b'6.92\n'
Running n=16
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'7.15\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'7.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'7.01\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'7.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945315, true => 0.49999237060546897)\n' ;;; stderr: b'7.37\n'
Running n=17
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'6.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'7.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'6.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'6.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972658, true => 0.49999618530273465)\n' ;;; stderr: b'7.00\n'
Running n=18
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.11\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.19\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.03\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486331, true => 0.4999980926513674)\n' ;;; stderr: b'7.21\n'
Running n=19
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'7.18\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'7.24\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'7.35\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'8.23\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743167, true => 0.49999904632568387)\n' ;;; stderr: b'8.46\n'
Running n=20
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'8.52\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'7.55\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'6.98\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371585, true => 0.49999952316284213)\n' ;;; stderr: b'7.44\n'
Running n=21
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'7.35\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'7.14\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'7.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'7.12\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185794, true => 0.49999976158142123)\n' ;;; stderr: b'7.28\n'
Running n=22
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'7.13\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'7.30\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'7.24\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'7.41\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092899, true => 0.4999998807907108)\n' ;;; stderr: b'7.64\n'
Running n=23
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'7.38\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'7.38\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'6.97\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'7.47\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046451, true => 0.49999994039535556)\n' ;;; stderr: b'7.53\n'
Running n=24
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'7.11\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'7.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'7.15\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023227, true => 0.49999997019767795)\n' ;;; stderr: b'8.43\n'
Running n=25
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'7.52\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'7.12\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'7.43\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011615, true => 0.49999998509883914)\n' ;;; stderr: b'7.50\n'
Running n=26
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'8.68\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'8.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'7.67\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'7.35\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505809, true => 0.49999999254941974)\n' ;;; stderr: b'8.07\n'
Running n=27
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'8.60\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'8.53\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'8.40\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'7.87\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252906, true => 0.49999999627471003)\n' ;;; stderr: b'7.58\n'
Running n=28
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'7.33\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'7.35\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'8.55\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'9.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626455, true => 0.4999999981373552)\n' ;;; stderr: b'8.92\n'
Running n=29
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'8.91\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'7.33\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'7.15\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'7.25\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313229, true => 0.49999999906867776)\n' ;;; stderr: b'7.40\n'

