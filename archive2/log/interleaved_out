=== Performing test "less" ===
Template interleaved.jl
Running n=1
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'7.25\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'6.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'7.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'7.11\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25)\n' ;;; stderr: b'7.13\n'
Running n=2
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'8.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'7.65\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'7.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'7.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.625, true => 0.3750000000000001)\n' ;;; stderr: b'7.94\n'
Running n=3
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'8.13\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'8.16\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'8.21\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'7.90\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5625, true => 0.43750000000000006)\n' ;;; stderr: b'7.82\n'
Running n=4
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'8.08\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'8.33\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'8.13\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'8.17\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.53125, true => 0.46875000000000006)\n' ;;; stderr: b'8.33\n'
Running n=5
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'9.22\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'52.54\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'9.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'9.30\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5156250000000001, true => 0.48437500000000006)\n' ;;; stderr: b'8.16\n'
Running n=6
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'7.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'8.53\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'7.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'7.41\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5078125000000001, true => 0.49218750000000006)\n' ;;; stderr: b'8.32\n'
Running n=7
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'7.87\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'8.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'8.14\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'8.04\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5039062500000001, true => 0.49609375000000006)\n' ;;; stderr: b'7.80\n'
Running n=8
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'8.15\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'8.61\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'8.14\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'8.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5019531250000001, true => 0.49804687500000006)\n' ;;; stderr: b'7.96\n'
Running n=9
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'7.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'8.77\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'9.03\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'9.38\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5009765625, true => 0.4990234375)\n' ;;; stderr: b'9.41\n'
Running n=10
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'9.36\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'9.53\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'9.58\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'9.16\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50048828125, true => 0.49951171875)\n' ;;; stderr: b'8.81\n'
Running n=11
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'8.72\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'9.32\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'9.41\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'9.32\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500244140625, true => 0.49975585937500006)\n' ;;; stderr: b'9.24\n'
Running n=12
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'9.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'9.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'10.57\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'9.21\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5001220703125, true => 0.4998779296875)\n' ;;; stderr: b'9.31\n'
Running n=13
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'8.59\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'8.16\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'8.14\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'8.33\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.50006103515625, true => 0.49993896484375006)\n' ;;; stderr: b'8.75\n'
Running n=14
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'8.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'9.25\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'8.65\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'8.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.500030517578125, true => 0.499969482421875)\n' ;;; stderr: b'7.65\n'
Running n=15
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'7.68\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'7.73\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'7.63\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'7.71\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000152587890625, true => 0.49998474121093756)\n' ;;; stderr: b'7.60\n'
Running n=16
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'7.62\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'7.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'7.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'7.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000076293945312, true => 0.49999237060546875)\n' ;;; stderr: b'7.78\n'
Running n=17
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'7.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'7.68\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'7.76\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'7.26\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000038146972656, true => 0.49999618530273443)\n' ;;; stderr: b'7.72\n'
Running n=18
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'7.62\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'7.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'7.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'7.67\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000019073486328, true => 0.4999980926513672)\n' ;;; stderr: b'7.66\n'
Running n=19
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'7.68\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'7.66\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'8.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'9.79\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000009536743165, true => 0.49999904632568365)\n' ;;; stderr: b'9.77\n'
Running n=20
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'9.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'9.14\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'8.91\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'8.61\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000004768371583, true => 0.49999952316284185)\n' ;;; stderr: b'7.94\n'
Running n=21
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'7.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'7.59\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'6.91\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000002384185792, true => 0.49999976158142095)\n' ;;; stderr: b'6.92\n'
Running n=22
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'6.92\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'6.94\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'6.91\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'6.94\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000001192092897, true => 0.4999998807907105)\n' ;;; stderr: b'7.13\n'
Running n=23
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'6.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'7.01\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'6.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000596046449, true => 0.4999999403953553)\n' ;;; stderr: b'6.95\n'
Running n=24
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'6.97\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'7.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'7.08\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'76.28\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000298023225, true => 0.49999997019767767)\n' ;;; stderr: b'8.23\n'
Running n=25
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'8.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'7.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'7.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'7.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000149011613, true => 0.49999998509883886)\n' ;;; stderr: b'7.97\n'
Running n=26
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'8.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'8.04\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'8.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'7.76\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000074505807, true => 0.49999999254941946)\n' ;;; stderr: b'8.12\n'
Running n=27
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'8.21\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'7.67\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'8.36\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'7.57\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000037252904, true => 0.49999999627470976)\n' ;;; stderr: b'8.65\n'
Running n=28
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'7.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'7.35\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'8.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'7.43\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000018626453, true => 0.4999999981373549)\n' ;;; stderr: b'8.14\n'
Running n=29
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'7.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'7.72\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'7.54\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'7.54\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5000000009313227, true => 0.4999999990686775)\n' ;;; stderr: b'9.18\n'

=== Performing test "equals" ===
Template interleaved.jl
Running n=1
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'8.61\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'9.17\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'8.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'8.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'8.54\n'
Running n=2
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'8.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'9.12\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'9.27\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'9.12\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'9.16\n'
Running n=3
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'9.34\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'8.85\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'8.86\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'8.18\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'7.88\n'
Running n=4
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'8.73\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'8.23\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'8.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'8.04\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'7.96\n'
Running n=5
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'7.94\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'8.03\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'8.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'8.50\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'8.18\n'
Running n=6
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'8.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'8.28\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'8.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'8.33\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'9.01\n'
Running n=7
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'8.50\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'8.74\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'9.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'8.72\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'8.96\n'
Running n=8
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'9.28\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'8.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'9.44\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'9.28\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'8.93\n'
Running n=9
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'8.18\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'9.21\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'8.77\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'9.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'8.49\n'
Running n=10
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'8.67\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'8.67\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'7.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'7.53\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'7.49\n'
Running n=11
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'7.56\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'7.49\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'7.27\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'8.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'8.56\n'
Running n=12
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'7.30\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'7.39\n'
Running n=13
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'7.27\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'7.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'7.19\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'7.23\n'
Running n=14
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'7.95\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'9.03\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'8.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'7.22\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'7.23\n'
Running n=15
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'7.18\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'7.23\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'7.22\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'7.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'7.49\n'
Running n=16
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'8.49\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'8.30\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'7.49\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'7.86\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'8.35\n'
Running n=17
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'8.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'8.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'7.12\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'7.24\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'7.71\n'
Running n=18
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'7.25\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'7.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'7.78\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'8.32\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'8.74\n'
Running n=19
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'8.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'7.23\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'7.25\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'7.27\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'7.59\n'
Running n=20
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'9.33\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'8.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'7.35\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'7.26\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'7.25\n'
Running n=21
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'7.48\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'7.84\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'7.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'6.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'6.93\n'
Running n=22
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'6.84\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'6.80\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'9.19\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'9.25\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'8.73\n'
Running n=23
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'7.36\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'7.00\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'7.46\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'7.36\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'7.16\n'
Running n=24
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'7.30\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'7.27\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'7.26\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'7.73\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'8.46\n'
Running n=25
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'7.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'7.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'6.75\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'6.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'7.34\n'
Running n=26
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'7.13\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'7.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'7.04\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'8.19\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'9.12\n'
Running n=27
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999925494194, true => 7.450580596923876e-9)\n' ;;; stderr: b'9.31\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999925494194, true => 7.450580596923876e-9)\n' ;;; stderr: b'9.21\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999925494194, true => 7.450580596923876e-9)\n' ;;; stderr: b'8.62\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999925494194, true => 7.450580596923876e-9)\n' ;;; stderr: b'8.24\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999925494194, true => 7.450580596923876e-9)\n' ;;; stderr: b'7.04\n'
Running n=28
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999962747097, true => 3.725290298461945e-9)\n' ;;; stderr: b'7.98\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999962747097, true => 3.725290298461945e-9)\n' ;;; stderr: b'8.79\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999962747097, true => 3.725290298461945e-9)\n' ;;; stderr: b'8.49\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999962747097, true => 3.725290298461945e-9)\n' ;;; stderr: b'8.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999962747097, true => 3.725290298461945e-9)\n' ;;; stderr: b'8.49\n'
Running n=29
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999981373549, true => 1.8626451492309756e-9)\n' ;;; stderr: b'8.60\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999981373549, true => 1.8626451492309756e-9)\n' ;;; stderr: b'8.61\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999981373549, true => 1.8626451492309756e-9)\n' ;;; stderr: b'9.56\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999981373549, true => 1.8626451492309756e-9)\n' ;;; stderr: b'8.98\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999981373549, true => 1.8626451492309756e-9)\n' ;;; stderr: b'8.60\n'

=== Performing test "sum" ===
Template interleaved.jl
Running n=1
stdout: b'1.0\n' ;;; stderr: b'7.47\n'
stdout: b'1.0\n' ;;; stderr: b'7.44\n'
stdout: b'1.0\n' ;;; stderr: b'7.66\n'
stdout: b'1.0\n' ;;; stderr: b'7.39\n'
stdout: b'1.0\n' ;;; stderr: b'7.69\n'
Running n=2
stdout: b'3.000000000000001\n' ;;; stderr: b'8.37\n'
stdout: b'3.000000000000001\n' ;;; stderr: b'9.34\n'
stdout: b'3.000000000000001\n' ;;; stderr: b'9.02\n'
stdout: b'3.000000000000001\n' ;;; stderr: b'8.29\n'
stdout: b'3.000000000000001\n' ;;; stderr: b'8.41\n'
Running n=3
stdout: b'7.000000000000001\n' ;;; stderr: b'8.93\n'
stdout: b'7.000000000000001\n' ;;; stderr: b'8.48\n'
stdout: b'7.000000000000001\n' ;;; stderr: b'7.99\n'
stdout: b'7.000000000000001\n' ;;; stderr: b'7.69\n'
stdout: b'7.000000000000001\n' ;;; stderr: b'8.87\n'
Running n=4
stdout: b'15.000000000000002\n' ;;; stderr: b'9.34\n'
stdout: b'15.000000000000002\n' ;;; stderr: b'9.18\n'
stdout: b'15.000000000000002\n' ;;; stderr: b'9.24\n'
stdout: b'15.000000000000002\n' ;;; stderr: b'8.99\n'
stdout: b'15.000000000000002\n' ;;; stderr: b'9.24\n'
Running n=5
stdout: b'31.0\n' ;;; stderr: b'9.08\n'
stdout: b'31.0\n' ;;; stderr: b'10.03\n'
stdout: b'31.0\n' ;;; stderr: b'9.58\n'
stdout: b'31.0\n' ;;; stderr: b'8.93\n'
stdout: b'31.0\n' ;;; stderr: b'8.91\n'
Running n=6
stdout: b'63.00000000000001\n' ;;; stderr: b'9.06\n'
stdout: b'63.00000000000001\n' ;;; stderr: b'9.14\n'
stdout: b'63.00000000000001\n' ;;; stderr: b'7.75\n'
stdout: b'63.00000000000001\n' ;;; stderr: b'8.75\n'
stdout: b'63.00000000000001\n' ;;; stderr: b'8.59\n'
Running n=7
stdout: b'127.00000000000001\n' ;;; stderr: b'9.10\n'
stdout: b'127.00000000000001\n' ;;; stderr: b'7.85\n'
stdout: b'127.00000000000001\n' ;;; stderr: b'7.39\n'
stdout: b'127.00000000000001\n' ;;; stderr: b'7.74\n'
stdout: b'127.00000000000001\n' ;;; stderr: b'7.63\n'
Running n=8
stdout: b'255.00000000000003\n' ;;; stderr: b'7.66\n'
stdout: b'255.00000000000003\n' ;;; stderr: b'8.24\n'
stdout: b'255.00000000000003\n' ;;; stderr: b'8.79\n'
stdout: b'255.00000000000003\n' ;;; stderr: b'9.45\n'
stdout: b'255.00000000000003\n' ;;; stderr: b'7.31\n'
Running n=9
stdout: b'511.0\n' ;;; stderr: b'7.17\n'
stdout: b'511.0\n' ;;; stderr: b'7.19\n'
stdout: b'511.0\n' ;;; stderr: b'7.15\n'
stdout: b'511.0\n' ;;; stderr: b'7.19\n'
stdout: b'511.0\n' ;;; stderr: b'8.37\n'
Running n=10
stdout: b'1023.0\n' ;;; stderr: b'8.46\n'
stdout: b'1023.0\n' ;;; stderr: b'6.98\n'
stdout: b'1023.0\n' ;;; stderr: b'6.94\n'
stdout: b'1023.0\n' ;;; stderr: b'6.95\n'
stdout: b'1023.0\n' ;;; stderr: b'7.22\n'
Running n=11
stdout: b'2047.0000000000002\n' ;;; stderr: b'6.96\n'
stdout: b'2047.0000000000002\n' ;;; stderr: b'6.93\n'
stdout: b'2047.0000000000002\n' ;;; stderr: b'6.89\n'
stdout: b'2047.0000000000002\n' ;;; stderr: b'8.90\n'
stdout: b'2047.0000000000002\n' ;;; stderr: b'8.66\n'
Running n=12
stdout: b'4095.0\n' ;;; stderr: b'8.74\n'
stdout: b'4095.0\n' ;;; stderr: b'8.30\n'
stdout: b'4095.0\n' ;;; stderr: b'6.92\n'
stdout: b'4095.0\n' ;;; stderr: b'6.97\n'
stdout: b'4095.0\n' ;;; stderr: b'6.98\n'
Running n=13
stdout: b'8191.0\n' ;;; stderr: b'7.03\n'
stdout: b'8191.0\n' ;;; stderr: b'6.93\n'
stdout: b'8191.0\n' ;;; stderr: b'7.80\n'
stdout: b'8191.0\n' ;;; stderr: b'8.57\n'
stdout: b'8191.0\n' ;;; stderr: b'8.52\n'
Running n=14
stdout: b'16383.0\n' ;;; stderr: b'116.86\n'
stdout: b'16383.0\n' ;;; stderr: b'7.52\n'
stdout: b'16383.0\n' ;;; stderr: b'7.48\n'
stdout: b'16383.0\n' ;;; stderr: b'7.58\n'
stdout: b'16383.0\n' ;;; stderr: b'7.47\n'
Running n=15
stdout: b'32767.0\n' ;;; stderr: b'8.09\n'
stdout: b'32767.0\n' ;;; stderr: b'8.41\n'
stdout: b'32767.0\n' ;;; stderr: b'8.75\n'
stdout: b'32767.0\n' ;;; stderr: b'8.51\n'
stdout: b'32767.0\n' ;;; stderr: b'8.89\n'
Running n=16
stdout: b'65535.0\n' ;;; stderr: b'8.94\n'
stdout: b'65535.0\n' ;;; stderr: b'8.77\n'
stdout: b'65535.0\n' ;;; stderr: b'9.50\n'
stdout: b'65535.0\n' ;;; stderr: b'9.19\n'
stdout: b'65535.0\n' ;;; stderr: b'9.19\n'
Running n=17
stdout: b'131071.0\n' ;;; stderr: b'9.77\n'
stdout: b'131071.0\n' ;;; stderr: b'9.50\n'
stdout: b'131071.0\n' ;;; stderr: b'8.99\n'
stdout: b'131071.0\n' ;;; stderr: b'8.96\n'
stdout: b'131071.0\n' ;;; stderr: b'9.20\n'
Running n=18
stdout: b'262143.0\n' ;;; stderr: b'9.33\n'
stdout: b'262143.0\n' ;;; stderr: b'8.87\n'
stdout: b'262143.0\n' ;;; stderr: b'8.93\n'
stdout: b'262143.0\n' ;;; stderr: b'9.98\n'
stdout: b'262143.0\n' ;;; stderr: b'10.08\n'
Running n=19
stdout: b'524287.0\n' ;;; stderr: b'8.92\n'
stdout: b'524287.0\n' ;;; stderr: b'8.78\n'
stdout: b'524287.0\n' ;;; stderr: b'9.63\n'
stdout: b'524287.0\n' ;;; stderr: b'9.00\n'
stdout: b'524287.0\n' ;;; stderr: b'8.05\n'
Running n=20
stdout: b'1.0485750000000001e6\n' ;;; stderr: b'7.37\n'
stdout: b'1.0485750000000001e6\n' ;;; stderr: b'7.29\n'
stdout: b'1.0485750000000001e6\n' ;;; stderr: b'7.32\n'
stdout: b'1.0485750000000001e6\n' ;;; stderr: b'8.85\n'
stdout: b'1.0485750000000001e6\n' ;;; stderr: b'8.80\n'
Running n=21
stdout: b'2.0971510000000002e6\n' ;;; stderr: b'8.71\n'
stdout: b'2.0971510000000002e6\n' ;;; stderr: b'7.90\n'
stdout: b'2.0971510000000002e6\n' ;;; stderr: b'7.34\n'
stdout: b'2.0971510000000002e6\n' ;;; stderr: b'7.38\n'
stdout: b'2.0971510000000002e6\n' ;;; stderr: b'7.38\n'
Running n=22
stdout: b'4.1943030000000005e6\n' ;;; stderr: b'7.44\n'
stdout: b'4.1943030000000005e6\n' ;;; stderr: b'7.32\n'
stdout: b'4.1943030000000005e6\n' ;;; stderr: b'7.53\n'
stdout: b'4.1943030000000005e6\n' ;;; stderr: b'8.64\n'
stdout: b'4.1943030000000005e6\n' ;;; stderr: b'9.18\n'
Running n=23
stdout: b'8.388607000000001e6\n' ;;; stderr: b'9.10\n'
stdout: b'8.388607000000001e6\n' ;;; stderr: b'8.40\n'
stdout: b'8.388607000000001e6\n' ;;; stderr: b'7.27\n'
stdout: b'8.388607000000001e6\n' ;;; stderr: b'8.87\n'
stdout: b'8.388607000000001e6\n' ;;; stderr: b'9.08\n'
Running n=24
stdout: b'1.6777215000000002e7\n' ;;; stderr: b'9.12\n'
stdout: b'1.6777215000000002e7\n' ;;; stderr: b'9.14\n'
stdout: b'1.6777215000000002e7\n' ;;; stderr: b'9.23\n'
stdout: b'1.6777215000000002e7\n' ;;; stderr: b'8.80\n'
stdout: b'1.6777215000000002e7\n' ;;; stderr: b'8.73\n'
Running n=25
stdout: b'3.3554431000000004e7\n' ;;; stderr: b'9.36\n'
stdout: b'3.3554431000000004e7\n' ;;; stderr: b'9.16\n'
stdout: b'3.3554431000000004e7\n' ;;; stderr: b'8.09\n'
stdout: b'3.3554431000000004e7\n' ;;; stderr: b'7.52\n'
stdout: b'3.3554431000000004e7\n' ;;; stderr: b'7.60\n'
Running n=26
stdout: b'6.710886300000001e7\n' ;;; stderr: b'7.27\n'
stdout: b'6.710886300000001e7\n' ;;; stderr: b'7.69\n'
stdout: b'6.710886300000001e7\n' ;;; stderr: b'7.49\n'
stdout: b'6.710886300000001e7\n' ;;; stderr: b'7.34\n'
stdout: b'6.710886300000001e7\n' ;;; stderr: b'7.94\n'
Running n=27
stdout: b'1.3421772700000001e8\n' ;;; stderr: b'9.19\n'
stdout: b'1.3421772700000001e8\n' ;;; stderr: b'9.13\n'
stdout: b'1.3421772700000001e8\n' ;;; stderr: b'9.11\n'
stdout: b'1.3421772700000001e8\n' ;;; stderr: b'7.30\n'
stdout: b'1.3421772700000001e8\n' ;;; stderr: b'7.38\n'
Running n=28
stdout: b'2.6843545500000003e8\n' ;;; stderr: b'7.32\n'
stdout: b'2.6843545500000003e8\n' ;;; stderr: b'7.46\n'
stdout: b'2.6843545500000003e8\n' ;;; stderr: b'7.50\n'
stdout: b'2.6843545500000003e8\n' ;;; stderr: b'7.52\n'
stdout: b'2.6843545500000003e8\n' ;;; stderr: b'7.49\n'
Running n=29
stdout: b'5.3687091100000006e8\n' ;;; stderr: b'7.65\n'
stdout: b'5.3687091100000006e8\n' ;;; stderr: b'9.14\n'
stdout: b'5.3687091100000006e8\n' ;;; stderr: b'9.05\n'
stdout: b'5.3687091100000006e8\n' ;;; stderr: b'9.16\n'
stdout: b'5.3687091100000006e8\n' ;;; stderr: b'7.67\n'

