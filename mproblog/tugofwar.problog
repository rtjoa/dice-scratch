sum_snds([], 0).
sum_snds([(X,P)|T], Sum) :-
   sum_snds(T, Rest),
   Sum is P + Rest.

PNorm::sample_now(Var, [(X,P)|L], X) :-
    sum_snds([(X,P)|L], Denom),
    PNorm is P / Denom.

sample(Var, [H|T], X) :-
    sample_now(Var, [H|T], X);
    \+ sample_now(Var, [H|T], X), sample(Var, T, X).

% query(sample(a, [(1, 0.1), (2, 0.2), (3, 0.3), (4, 0.4)], _)).

cheater_dist([(1,1/6),(2,1/6),(3,1/6),(4,1/6),(5,1/6),(6,1/6)]).
% cheater_dist([(1,1/3),(2,1/3),(3,1/3)]).

cheater1(X) :-
    cheater_dist(D),
    sample(c1, D, X).
cheater2(X) :-
    cheater_dist(D),
    sample(c2, D, X).

cheaters_same :- cheater1(X), cheater2(Y), X is Y.

evidence(cheaters_same, false).

cheater(X) :- cheater1(X); cheater2(X).

base_strength_dist([(0,0.015625), (1,0.09375), (2,0.234375), (3,0.3125), (4,0.234375), (5,0.09375), (6, 0.015625)]).

strength_boost(1, 142).
strength_boost(2, 146).
strength_boost(3, 150).
strength_boost(4, 143).
strength_boost(5, 145).
strength_boost(6, 140).

player(I, X) :-
    base_strength_dist(D),
    sample(I, D, Base),
    strength_boost(I, Boost),
    X is Base + Boost.

player_final(I, X) :-
    player(I, X0),
    cheater(I),
    X is X0 + 10.

player_final(I, X) :-
    player(I, X),
    \+ cheater(I).

results :-
    player_final(1, A),
    player_final(2, B),
    player_final(3, C),
    player_final(4, D),
    player_final(5, E),
    player_final(6, F),
    A + B + E < C + D + F,
    A + C + D < B + E + F,
    A + C + E < B + D + F,
    A + E + F < B + C + D.

evidence(results, true).

query(cheater(5)).

