=== Performing test "equals" ===
Template uniform.jl
Running n=1
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'6.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'6.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'6.72\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'6.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.5, true => 0.5)\n' ;;; stderr: b'6.76\n'
Running n=2
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'6.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'7.06\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'6.86\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'6.93\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.75, true => 0.25000000000000006)\n' ;;; stderr: b'6.82\n'
Running n=3
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'7.02\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'7.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'7.11\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'7.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.875, true => 0.12500000000000003)\n' ;;; stderr: b'7.13\n'
Running n=4
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'7.06\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'7.19\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'7.34\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'6.92\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9375, true => 0.0625)\n' ;;; stderr: b'7.19\n'
Running n=5
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'7.87\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'9.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'7.84\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'7.24\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.96875, true => 0.031250000000000014)\n' ;;; stderr: b'7.21\n'
Running n=6
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'7.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'8.65\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'9.03\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'8.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.984375, true => 0.015625000000000007)\n' ;;; stderr: b'9.28\n'
Running n=7
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'9.10\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'8.15\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'7.69\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'7.51\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9921875, true => 0.007812500000000002)\n' ;;; stderr: b'7.45\n'
Running n=8
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'7.38\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'7.34\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'7.39\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'7.37\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99609375, true => 0.003906250000000001)\n' ;;; stderr: b'7.31\n'
Running n=9
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'7.45\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'7.27\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'7.46\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'7.40\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9980468750000001, true => 0.001953125)\n' ;;; stderr: b'7.27\n'
Running n=10
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'7.32\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'7.36\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'7.34\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'7.28\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9990234375, true => 0.0009765625)\n' ;;; stderr: b'7.85\n'
Running n=11
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'8.73\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'8.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'8.39\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'8.47\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.99951171875, true => 0.0004882812500000004)\n' ;;; stderr: b'7.38\n'
Running n=12
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'7.26\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'7.39\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'7.39\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'8.35\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9997558593750001, true => 0.00024414062500000016)\n' ;;; stderr: b'8.27\n'
Running n=13
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'8.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'9.37\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'8.32\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'8.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9998779296875001, true => 0.00012207031250000008)\n' ;;; stderr: b'9.45\n'
Running n=14
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'9.33\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'8.94\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'7.98\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'8.06\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999389648437501, true => 6.103515625000003e-5)\n' ;;; stderr: b'8.22\n'
Running n=15
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'8.97\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'8.15\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'8.43\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'11.36\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.999969482421875, true => 3.0517578125000014e-5)\n' ;;; stderr: b'10.81\n'
Running n=16
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'10.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'10.09\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'10.64\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'10.58\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999847412109376, true => 1.5258789062500007e-5)\n' ;;; stderr: b'11.45\n'
Running n=17
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'11.77\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'10.82\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'9.63\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'8.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999923706054688, true => 7.629394531250002e-6)\n' ;;; stderr: b'10.70\n'
Running n=18
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'9.57\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'9.83\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'11.93\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'11.88\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999961853027344, true => 3.814697265625001e-6)\n' ;;; stderr: b'10.12\n'
Running n=19
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'14.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'14.77\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'14.68\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'12.41\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999980926513672, true => 1.9073486328125e-6)\n' ;;; stderr: b'12.10\n'
Running n=20
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'18.07\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'18.56\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'18.40\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'21.33\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999990463256836, true => 9.5367431640625e-7)\n' ;;; stderr: b'20.92\n'
Running n=21
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'29.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'29.63\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'30.97\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'30.79\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999995231628418, true => 4.7683715820312495e-7)\n' ;;; stderr: b'31.40\n'
Running n=22
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'57.81\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'63.20\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'64.51\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'57.97\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999997615814209, true => 2.3841857910156247e-7)\n' ;;; stderr: b'52.33\n'
Running n=23
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'130.61\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'121.96\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'130.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'123.66\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999998807907104, true => 1.1920928955078144e-7)\n' ;;; stderr: b'107.79\n'
Running n=24
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'309.56\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'263.26\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'251.87\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'245.05\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999403953552, true => 5.960464477539072e-8)\n' ;;; stderr: b'299.78\n'
Running n=25
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'693.12\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'568.29\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'579.17\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'544.43\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999701976776, true => 2.9802322387695405e-8)\n' ;;; stderr: b'615.52\n'
Running n=26
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'1419.06\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'1264.99\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'1201.34\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'1253.61\n'
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999850988388, true => 1.490116119384773e-8)\n' ;;; stderr: b'1505.41\n'
Running n=27
stdout: b'DataStructures.DefaultDict{Any, Any, Float64}(false => 0.9999999925494194, true => 7.450580596923876e-9)\n' ;;; stderr: b'2946.01\n'
stdout: b'' ;;; stderr: b'Command terminated by signal 9\n2760.67\n'
Out of memory; got return code 137. Treating as timeout

